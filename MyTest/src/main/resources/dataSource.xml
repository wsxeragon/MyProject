<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"   
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
      xmlns:aop="http://www.springframework.org/schema/aop"        
      xmlns:tx="http://www.springframework.org/schema/tx"       
      xmlns:context="http://www.springframework.org/schema/context"        
      xsi:schemaLocation="  
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd         
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd             
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">  
      
 <bean id="dataSource0" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc.driverclass}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		
		 <!-- 初始化连接大小 -->
        <property name="initialSize" value="0" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />


        <property name="validationQuery"><value>SELECT 1</value></property> 
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />

        <!-- 监控数据库 -->
        <!-- <property name="filters" value="stat" /> -->
        <property name="filters" value="mergeStat" />
	</bean>  
	 
	
<bean id="dataSource1" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc.driverclass1}</value>
		</property>
		<property name="url">
			<value>${jdbc.url1}</value>
		</property>
		<property name="username">
			<value>${jdbc.username1}</value>
		</property>
		<property name="password">
			<value>${jdbc.password1}</value>
		</property>
	</bean> 
  
  
    <bean id="dynamicdatasource" class="cn.inphase.tool.DynamicDataSource">  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                 <entry key="defaultDataSource" value-ref="dataSource0" />   
                 <entry key="dataSource1" value-ref="dataSource1" />   
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="dataSource0" />  
    </bean>  
		
		
	<!-- 事务管理 -->
<bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<property name="dataSource" ref="dynamicdatasource"></property>
</bean>
	
<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
<property name="mapperLocations" value="classpath:mybatis/MyMapper.xml" />
 <property name="dataSource" ref="dynamicdatasource"></property>
 <!-- 自动扫描实体类，产生别名 -->
 <property name="typeAliasesPackage" value="cn.inphase.domain"></property>
</bean>

<bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!-- 扫描mybatis的mapper接口和xml -->
<property name="basePackage" value="cn.inphase.dao"></property>
<!--  <property name="sqlSessionFactory" ref="sqlSessionFactoryBean"></property>  -->
<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean" /> 
</bean>

<!-- 使用声明式事务，引用上面定义的tx -->
<tx:annotation-driven transaction-manager="tx"/>

 <!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor"
        class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
        scope="prototype">
        <property name="patterns">
            <list>
                <value>cn.inphase.service.*</value>
            </list>
        </property>
    </bean>
 
</beans>   