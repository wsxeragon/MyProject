<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"   
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
      xmlns:aop="http://www.springframework.org/schema/aop"        
      xmlns:tx="http://www.springframework.org/schema/tx"       
      xmlns:context="http://www.springframework.org/schema/context"        
      xsi:schemaLocation="  
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd         
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd             
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">  
      
 <bean id="dataSource0" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc.driverclass}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>  
	 
  
  
    <bean id="dynamicdatasource" class="cn.inphase.tool.DynamicDataSource">  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                 <entry key="defaultDataSource" value-ref="dataSource0" />   
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="dataSource0" />  
    </bean>  
		
		
	<!-- 事务管理 -->
<bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<property name="dataSource" ref="dynamicdatasource"></property>
</bean>
	
<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
<property name="mapperLocations" value="classpath:mybatis1/MyMapper1.xml" />
 <property name="dataSource" ref="dynamicdatasource"></property>
 <!-- 自动扫描实体类，产生别名 -->
 <property name="typeAliasesPackage" value="cn.inphase.domain"></property>
</bean>

<bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!-- 扫描mybatis的mapper接口和xml -->
<property name="basePackage" value="cn.inphase.dao"></property>
<!--  <property name="sqlSessionFactory" ref="sqlSessionFactoryBean"></property>  -->
<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean" /> 
</bean>

<!-- 使用声明式事务，引用上面定义的tx -->
<tx:annotation-driven transaction-manager="tx"/>

</beans>   